{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Course - Project\\\\React Router Project\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(request, params) {\n  const id = params.EventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"could not fetch event details.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\n;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","json","useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","EventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["D:/React Course - Project/React Router Project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { json, useLoaderData } from \"react-router-dom\";\r\n\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetailPage() {\r\n  const data = useLoaderData();\r\n\r\n  return (\r\n    <>\r\n      <EventItem event={data.event} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader (request, params) {\r\n  const id = params.EventId;\r\n\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok){\r\n    throw json({message: \"could not fetch event details.\"}, {status: 500})\r\n  }\r\n  else{\r\n    return response;\r\n  }\r\n\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAEtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAE5B,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP;AAACP,EAAA,CARQD,eAAe;EAAA,QACTN,aAAa;AAAA;AAAAe,EAAA,GADnBT,eAAe;AAUxB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAEC,OAAO,EAAEC,MAAM,EAAE;EAC7C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAC;IACf,MAAMxB,IAAI,CAAC;MAACyB,OAAO,EAAE;IAAgC,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACxE,CAAC,MACG;IACF,OAAOJ,QAAQ;EACjB;AAEF;AAAC;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}